set -g history-limit 10000

# set the time in milliseconds for which tmux waits for an escape is input to
# determine if it is part of a function or meta key sequences. Default: 500ms
set -sg escape-time 1

set -g default-terminal screen-256color
# needed for proper nvim/tmux/base16 colors
set -ga terminal-overrides ",xterm-256color:Tc"

set -g allow-rename off
setw -g automatic-rename off
set -s set-clipboard external

unbind C-b
set -g prefix C-a
bind a send-prefix

bind c new-window -n ''

setw -g mode-keys vi

bind | split-window -h
bind - split-window -v

setw -g xterm-keys on

# Better pane resizing
bind -n C-S-Up resize-pane -U 5
bind -n C-S-Down resize-pane -D 5
bind -n C-S-Left resize-pane -L 5
bind -n C-S-Right resize-pane -R 5

# cycle through panes
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Status bar
set -g status on
set -g status-interval 10   # default 15 second updates
set -g status-justify centre

setw -g monitor-activity off
set -g visual-activity off

unbind r
bind r source-file ~/.tmux.conf

# Colors
set -g pane-border-style fg=default
set -g pane-active-border-style fg=green,bg=default
set -g status-style bg=colour235,fg=white,dim
setw -g window-status-current-style fg=brightgreen,bg=colour236,bright

set -g status-left-length 70
set -g status-left "#[fg=brightblue]#h"

set -g status-right-length 60
set -g status-right "#[fg=brightmagenta]#S:#I:#P #[fg=brightwhite]:: #[fg=brightcyan]%l:%M %p"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|l?n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# vim style copy and pasting
bind P paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

# allow mouse to cycle panes
set -g mouse on
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

set -g allow-passthrough 1
